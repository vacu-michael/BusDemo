@page "/"
@rendermode InteractiveServer
@using BLL

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<button @onclick="StartWorkflowAsync">Start Workflow</button>

@if (applicationId is not null)
{
    <p>Application ID: <b>@applicationId</b></p>
}

@if (accountNumber is not null)
{
    <p>Account Number: <b>@accountNumber</b></p>
}

@if (statusMessage is not null)
{
    <p>@statusMessage</p>
}

@code {
    [Inject] public required DemoBusinessLogic BLL { get; set; }
    [Inject] public required ILogger<Home> Logger { get; set; }
    private int? applicationId;
    private long? accountNumber;
    private string? statusMessage;

    protected override void OnInitialized()
    {
        BLL.WorkflowCompleted += async (ApplicationId) => await OnWorkflowCompleted(ApplicationId);
        BLL.WorkflowRescheduled += async (ApplicationId) => await OnWorkflowRescheduled(ApplicationId);
        BLL.WorkflowError += async (ApplicationId) => await OnWorkflowError(ApplicationId);
    }

    private async Task OnWorkflowCompleted(int appId)
    {
        if (applicationId != appId) return;

        var app = await BLL.GetApplication(appId);
        if (app == null) return;

        accountNumber = app.AccountNumber;
        await InvokeAsync(StateHasChanged);
    }

    private async Task OnWorkflowRescheduled(int appId)
    {
        if (applicationId != appId) return;
        statusMessage = "Workflow rescheduled. Please wait...";
        await InvokeAsync(StateHasChanged);
    }

    private async Task OnWorkflowError(int appId)
    {
        if (applicationId != appId) return;
        statusMessage = "Workflow error occurred. Please try again later.";
        await InvokeAsync(StateHasChanged);
    }

    private async Task StartWorkflowAsync()
    {
        var newApp = await BLL.CreateApplicationAsync();
        applicationId = newApp.Id;
        accountNumber = null;
        await BLL.SendStartWorkflowCommand(newApp.Id);
        Logger.LogInformation("Start workflow button clicked for application {ApplicationId}", newApp.Id);
    }
}